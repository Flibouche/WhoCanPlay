{% extends 'base.html.twig' %}

{% block title %}{{ gameApi[0]["name"] }}{% endblock %}

{% block body %}

<nav class="w-full flex text-sm" aria-label="Breadcrumb">
    <ol class="inline-flex items-center space-x-1 md:space-x-2 rtl:space-x-reverse">
        <li class="inline-flex items-center">
            <a href="{{ path('app_home') }}" class="inline-flex items-center text-black dark:text-white hover:text-indigo-800 dark:hover:text-indigo-200">
                <svg class="w-3 h-3 me-2.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                    <path d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z" />
                </svg>
                Home
            </a>
        </li>
        <li>
            <div class="flex items-center">
                <svg class="rtl:rotate-180 w-3 h-3 text-gray-400 mx-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4" />
                </svg>
                <a href="{{ path('app_game') }}" class="ms-1 md:ms-2 text-black dark:text-white hover:text-indigo-800 dark:hover:text-indigo-200">Games</a>
            </div>
        </li>
        <li aria-current="{{ gameApi[0]['name'] }}">
            <div class="flex items-center">
                <svg class="rtl:rotate-180 w-3 h-3 text-gray-400 mx-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4" />
                </svg>
                <span class="ms-1 md:ms-2 text-black dark:text-white underline">{{ game.slug|replace({'-': ' '})|title }}</span>
            </div>
        </li>
    </ol>
</nav>

<div class="flex flex-col md:flex-row w-full gap-[20px]">

    <section id="primary" class="basis-0 min-w-[70%] max-w-[50rem]">
        <article class="bg-white dark:bg-neutral-800 flex flex-col sm:flex-row mb-5 rounded-xl py-5 text-black dark:text-white shadow-[rgba(50,50,93,0.25)_0px_6px_12px_-2px,_rgba(0,0,0,0.3)_0px_3px_7px_-3px]">
            <header class="mx-5 mb-5 sm:mb-0 shrink-0">
                <figure class="grid justify-center text-center">
                    <img src="https://images.igdb.com/igdb/image/upload/t_cover_big/{{ gameApi[0].cover.image_id }}.jpg" alt="Cover of {{ gameApi[0]['name'] }}" class="rounded-xl">
                </figure>
            </header>

            <div id="game__info" class="flex flex-col pl-5 pr-5 sm:pl-0 relative">
                <h1 class="text-center sm:text-left text-3xl pb-5 sm:pt-5 text-indigo-800 dark:text-indigo-200 font-raleway font-bold">
                    {{ gameApi[0]["name"] }}
                </h1>
                <h2>
                    <strong>Developer</strong> : {% for developer in gameApi[0].developers %}<span>{{ developer }}</span>{% endfor %}
                </h2>
                <h2>
                    <strong>Genres</strong> : {% for genre in gameApi[0].genres %}<span>{{ genre.name }} </span>{% endfor %}
                </h2>
                <h2 class="pb-10">
                    <strong>Platforms</strong> : {% for platform in gameApi[0].platforms %}<span>{{ platform.name }} </span>{% endfor %}
                </h2>
                <h2 class="absolute flex gap-3 bottom-0 right-0 pr-5">
                    {% for disability in featuresByDisability %}
                        <img src="{{ asset(disability[0].icon) }}" alt="{{ disability[0].disabilityName }}" title="{{ disability[0].disabilityName }}" width="25" height="25" class="dark:invert dark:brightness-0 dark:filter">
                    {% endfor %}
                </h2>
            </div>
        </article>

        <div class="tab-section rounded-lg p-2 mb-5 w-full bg-white dark:bg-neutral-800 shadow-[rgba(50,50,93,0.25)_0px_6px_12px_-2px,_rgba(0,0,0,0.3)_0px_3px_7px_-3px]">
            <nav aria-label="Game Information Tabs">
                <div class="flex">
                    {# Genres #}
                    <button class="px-4 py-2 font-medium flex items-center hover:text-indigo-800 dark:hover:text-indigo-200" data-tab-target="#tab1">
                        <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 512 512" width="20" height="20" xmlns="http://www.w3.org/2000/svg">
                            <path d="M192 104.8c0-9.2-5.8-17.3-13.2-22.8C167.2 73.3 160 61.3 160 48c0-26.5 28.7-48 64-48s64 21.5 64 48c0 13.3-7.2 25.3-18.8 34c-7.4 5.5-13.2 13.6-13.2 22.8c0 12.8 10.4 23.2 23.2 23.2H336c26.5 0 48 21.5 48 48v56.8c0 12.8 10.4 23.2 23.2 23.2c9.2 0 17.3-5.8 22.8-13.2c8.7-11.6 20.7-18.8 34-18.8c26.5 0 48 28.7 48 64s-21.5 64-48 64c-13.3 0-25.3-7.2-34-18.8c-5.5-7.4-13.6-13.2-22.8-13.2c-12.8 0-23.2 10.4-23.2 23.2V464c0 26.5-21.5 48-48 48H279.2c-12.8 0-23.2-10.4-23.2-23.2c0-9.2 5.8-17.3 13.2-22.8c11.6-8.7 18.8-20.7 18.8-34c0-26.5-28.7-48-64-48s-64 21.5-64 48c0 13.3 7.2 25.3 18.8 34c7.4 5.5 13.2 13.6 13.2 22.8c0 12.8-10.4 23.2-23.2 23.2H48c-26.5 0-48-21.5-48-48V343.2C0 330.4 10.4 320 23.2 320c9.2 0 17.3 5.8 22.8 13.2C54.7 344.8 66.7 352 80 352c26.5 0 48-28.7 48-64s-21.5-64-48-64c-13.3 0-25.3 7.2-34 18.8C40.5 250.2 32.4 256 23.2 256C10.4 256 0 245.6 0 232.8V176c0-26.5 21.5-48 48-48H168.8c12.8 0 23.2-10.4 23.2-23.2z" />
                        </svg>
                        Genres
                    </button>
                    {# Platforms #}
                    <button class="px-4 py-2 font-medium flex items-center text-black dark:text-white hover:text-indigo-800 dark:hover:text-indigo-200" data-tab-target="#tab2">
                        <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 640 512" xmlns="http://www.w3.org/2000/svg">
                            <path d="M192 64C86 64 0 150 0 256S86 448 192 448H448c106 0 192-86 192-192s-86-192-192-192H192zM496 168a40 40 0 1 1 0 80 40 40 0 1 1 0-80zM392 304a40 40 0 1 1 80 0 40 40 0 1 1 -80 0zM168 200c0-13.3 10.7-24 24-24s24 10.7 24 24v32h32c13.3 0 24 10.7 24 24s-10.7 24-24 24H216v32c0 13.3-10.7 24-24 24s-24-10.7-24-24V280H136c-13.3 0-24-10.7-24-24s10.7-24 24-24h32V200z" />
                        </svg>
                        Platforms
                    </button>
                    {# Disabilities #}
                    <button class="px-4 py-2 font-medium flex items-center text-black dark:text-white hover:text-indigo-800 dark:hover:text-indigo-200" data-tab-target="#tab3">
                        <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 448 512" width="20" height="20" xmlns="http://www.w3.org/2000/svg">
                            <path d="M320 48a48 48 0 1 1 96 0 48 48 0 1 1 -96 0zM204.5 121.3c-5.4-2.5-11.7-1.9-16.4 1.7l-40.9 30.7c-14.1 10.6-34.2 7.7-44.8-6.4s-7.7-34.2 6.4-44.8l40.9-30.7c23.7-17.8 55.3-21 82.1-8.4l90.4 42.5c29.1 13.7 36.8 51.6 15.2 75.5L299.1 224h97.4c30.3 0 53 27.7 47.1 57.4L415.4 422.3c-3.5 17.3-20.3 28.6-37.7 25.1s-28.6-20.3-25.1-37.7L377 288H306.7c8.6 19.6 13.3 41.2 13.3 64c0 88.4-71.6 160-160 160S0 440.4 0 352s71.6-160 160-160c11.1 0 22 1.1 32.4 3.3l54.2-54.2-42.1-19.8zM160 448a96 96 0 1 0 0-192 96 96 0 1 0 0 192z" />
                        </svg>
                        Disabilities
                    </button>
                    {# Disabilities #}
                    <button class="px-4 py-2 font-medium flex items-center text-black dark:text-white hover:text-indigo-800 dark:hover:text-indigo-200" data-tab-target="#tab4">
                        <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 448 512" width="20" height="20" xmlns="http://www.w3.org/2000/svg">
                            <path d="M320 48a48 48 0 1 1 96 0 48 48 0 1 1 -96 0zM204.5 121.3c-5.4-2.5-11.7-1.9-16.4 1.7l-40.9 30.7c-14.1 10.6-34.2 7.7-44.8-6.4s-7.7-34.2 6.4-44.8l40.9-30.7c23.7-17.8 55.3-21 82.1-8.4l90.4 42.5c29.1 13.7 36.8 51.6 15.2 75.5L299.1 224h97.4c30.3 0 53 27.7 47.1 57.4L415.4 422.3c-3.5 17.3-20.3 28.6-37.7 25.1s-28.6-20.3-25.1-37.7L377 288H306.7c8.6 19.6 13.3 41.2 13.3 64c0 88.4-71.6 160-160 160S0 440.4 0 352s71.6-160 160-160c11.1 0 22 1.1 32.4 3.3l54.2-54.2-42.1-19.8zM160 448a96 96 0 1 0 0-192 96 96 0 1 0 0 192z" />
                        </svg>
                        Disabilities
                    </button>
                </div>
            </nav>

            <div id="tab1" class="w-full tab-content hidden px-5 mt-5 py-5">
                {# Boucle pour récupérer et trier les features par disability sans doublons #}
                {% for disability, features in featuresByDisability %}
                <article id="disability">
                    <header class="flex gap-3 brd-purple">
                        <img src="{{ asset(features[0].icon) }}" alt="{{ features[0].disabilityName }}" title="{{ features[0].disabilityName }}" width="25" height="25" class="dark:invert dark:brightness-0 dark:filter">
                        <h2 class="text-2xl dark:text-white">{{ disability }}</h2>
                    </header>

                    <hr class="my-3 border-t-2 w-full border-amber-800 dark:border-yellow-200" />

                    <ul id="feature-list">
                        {% for feature in features %}
                        <li id="feature" class="mb-5">
                            <h3 class="text-xl pb-2 dark:text-white">{{ feature.name }}</h3>
                            <div id="feature-content" class="dark:text-white">
                                {{ feature.content|raw }}
                            </div>
                        </li>

                        {% if feature.images is not empty %}
                        <div class="my-3 w-full">
                            <h4 class="text-2xl font-bold pb-2 text-black dark:text-white">Content image(s) :</h4>
                            <!-- Carousel -->
                            <div class="relative bg-black/20 dark:bg-black/50 rounded-xl overflow-hidden shadow-[rgba(50,50,93,0.25)_0px_6px_12px_-2px,_rgba(0,0,0,0.3)_0px_3px_7px_-3px]">
                                <ul id="slider" class="relative">
                                    {% for image in feature.images %}
                                    <li class="hidden">
                                        <div class="flex flex-col h-[40vh]">
                                            <img class="w-full h-full object-contain lg:object-none" src="{{ asset('assets/uploads/features/' ~ image.url) }}" alt="{{ image.altText }}">
                                            <div class="p-4 bg-white/70 dark:bg-black/70 text-black dark:text-white">
                                                <h5 class="text-xl font-semibold mb-2">{{ image.title }}</h5>
                                                <p>{{ image.description }}</p>
                                            </div>
                                        </div>
                                    </li>
                                    {% endfor %}
                                </ul>
                                <div class="absolute px-5 flex h-full w-full top-0 left-0">
                                    <div class="my-auto w-full flex justify-between">
                                        <button id="previous-slide" class="bg-white p-3 rounded-full bg-opacity-80 shadow-lg">
                                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" class="w-6 h-6 fill-current">
                                                <path d="M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z" />
                                            </svg>
                                        </button>
                                        <button id="next-slide" class="bg-white p-3 rounded-full bg-opacity-80 shadow-lg">
                                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" class="w-6 h-6 fill-current">
                                                <path d="M438.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-160-160c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L338.8 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l306.7 0L233.4 393.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l160-160z" />
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        {% endif %}

                        {% endfor %}
                    </ul>
                </article>
                {% endfor %}
            </div>

            <div id="tab2" class="w-full tab-content hidden">
                <h2>Test 2</h2>
            </div>

            <div id="tab3" class="w-full tab-content hidden">
                <h2>Test 3</h2>
            </div>

            <div id="tab4" class="w-full tab-content hidden">
                <h2>Test 4</h2>
            </div>

        </div>
    </section>

    <aside id="secondary" class="basis-0 min-w-[100%] sm:min-w-[30%] sm:basis-3/12 pr-5">
        <div id="forum">
            <a href="{{ path('forum_game', {'id': game.id, 'slug':game.slug}) }}">
                <h2 class="text-left md:text-right text-2xl dark:text-white font-raleway font-bold pr-3 pt-5">Forum</h2>
            </a>
            <hr class="my-3 w-[100%] border-t-2 border-amber-800 dark:border-yellow-200" />
        </div>
    </aside>
</div>

<script>
    // J'attends que le DOM soit chargé
    document.addEventListener('DOMContentLoaded', function () {
        // Je récupère tous les éléments dont j'ai besoin
        let currentSlideId = 1;
        const sliderElement = document.getElementById('slider');
        const slides = sliderElement.getElementsByTagName('li');
        const totalSlides = slides.length;
        const nextButton = document.getElementById('next-slide');
        const previousButton = document.getElementById('previous-slide');

        // Fonction pour afficher la diapositive actuelle
        function showSlide() {
            for (let index = 0; index < totalSlides; index++) {
                const element = slides[index];
                if (currentSlideId === index + 1) {
                    element.classList.remove('hidden');
                } else {
                    element.classList.add('hidden');
                }
            }
        }

        // Fonctions pour passer à la diapositive suivante
        function next() {
            if (currentSlideId < totalSlides) {
                currentSlideId++;
            } else {
                currentSlideId = 1; // Revenir au début si on est à la fin
            }
            showSlide();
        }

        // Fonctions pour passer à la diapositive précédente
        function previous() {
            if (currentSlideId > 1) {
                currentSlideId--;
            } else {
                currentSlideId = totalSlides; // Aller à la dernière diapositive si on est au début
            }
            showSlide();
        }

        // Initialisation de la diapositive au chargement de la page
        showSlide();

        // Ajout des écouteurs d'événements aux boutons
        nextButton.addEventListener('click', next);
        previousButton.addEventListener('click', previous);
    });
</script>

<script>
    // Je sélectionne tous les éléments avec l'attribut 'data-tab-target'
    const tabs = document.querySelectorAll('[data-tab-target]');
    // Je définis les classes CSS pour l'état actif d'un onglet
    const activeClasses = ['border-b-2', 'text-indigo-800', 'border-indigo-800', 'dark:text-indigo-200', 'dark:border-indigo-200'];
    // Je définis les classes CSS pour l'état inactif d'un onglet
    const inactiveClasses = ['text-black', 'dark:text-white'];

    // J'active le premier onglet par défaut
    tabs[0].classList.remove(...inactiveClasses); // Je retire les classes inactives
    tabs[0].classList.add(...activeClasses); // J'ajoute les classes actives
    document.querySelector('#tab1').classList.remove('hidden'); // J'affiche le contenu du premier onglet

    // J'ajoute un écouteur d'événements à chaque onglet
    tabs.forEach(tab => {
        tab.addEventListener('click', () => {
            // Je trouve le contenu associé à l'onglet cliqué
            const targetContent = document.querySelector(tab.dataset.tabTarget);
            // Je cache tous les contenus d'onglets
            document.querySelectorAll('.tab-content').forEach(content => content.classList.add('hidden'));
            // J'affiche le contenu de l'onglet cliqué
            targetContent.classList.remove('hidden');
            // Je réinitialise tous les onglets à l'état inactif
            tabs.forEach(t => {
                t.classList.remove(...activeClasses);
                t.classList.add(...inactiveClasses);
            });
            // J'active l'onglet cliqué
            tab.classList.remove(...inactiveClasses);
            tab.classList.add(...activeClasses);
        });
    });
</script>

{% endblock %}